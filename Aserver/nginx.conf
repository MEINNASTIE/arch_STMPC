worker_processes 3;


user mpcapp;
error_log /var/log/nginx/error.log warn;


events {
    worker_connections 1024;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # HTTP to HTTPS redirection
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        
	location / {
	root /home/mpcapp/web/apitest;
	index index.html index.htm;
        }

    # Redirect all HTTP to HTTPS
    # return 301 https://$host$request_uri;

	location /api/hw {
            proxy_pass http://localhost:7000/api/hw;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS settings (ensure these are set correctly only once)
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';

            # Handle OPTIONS method
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
                return 204;  
            }
        }
	
	location /api/hw/mca {
            proxy_pass http://localhost:8006/api/hw/mca;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS settings (ensure these are set correctly only once)
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';

            # Handle OPTIONS method
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
                return 204;  
            }
        }
	
	
    location /api {
            proxy_pass http://localhost:8005/api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS settings (ensure these are set correctly only once)
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';

            # Handle OPTIONS method
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
                return 204;  
            }
        }	
    }

    # HTTPS server block
    server {
        listen 443 ssl;

    # SSL configuration
	#ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
	#ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
	#ssl_protocols TLSv1.2 TLSv1.3;
	#ssl_ciphers HIGH:!aNULL:!MD5;
	ssl_certificate /home/mpcapp/_cfg/ssl/server.crt;
        ssl_certificate_key /home/mpcapp/_cfg/ssl/private.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        root /home/mpcapp/web/dist;
        index index.html;
        try_files $uri /index.html;
    }

    location /api {
        proxy_pass http://localhost:8005;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
	    proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # location / {
    #     proxy_pass http://localhost:8000;  
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    location /token {
        proxy_pass http://localhost:8000/token;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error page for server errors
        error_page 500 502 503 504 /404.html;
        location = /404.html {
            root /home/mpcapp/web/Aserver/;
            internal;
        }
    }
}
